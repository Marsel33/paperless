USE md;
CREATE TABLE IF NOT EXISTS refs (ref CHAR);
CREATE TABLE IF NOT EXISTS `enm_СостоянияОтправки` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ЮрФизЛицо` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыХраненияФайлов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыПроблемОбменаДанными` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыПользователей` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыПодключаемогоОборудования` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыОтчетов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыКонтактнойИнформации` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_СтавкиНДС` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ДниНедели` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыОперацийЭД` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыДополнительныхОтчетовИОбработок` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыДнейПроизводственногоКалендаря` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `doc_barcodes` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR);
CREATE TABLE IF NOT EXISTS `doc_РеализацияТоваровУслуг` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `АдресДоставки` CHAR, `БанковскийСчетОрганизации` CHAR, `ВалютаДокумента` CHAR, `ВидОперации` CHAR, `ВидПередачи` CHAR, `Грузоотправитель` CHAR, `Грузополучатель` CHAR, `ДисконтнаяКарта` CHAR, `ДоговорКонтрагента` CHAR, `Комментарий` CHAR, `Контрагент` CHAR, `КратностьВзаиморасчетов` INT, `КурсВзаиморасчетов` FLOAT, `Организация` CHAR, `Ответственный` CHAR, `ОтражатьВБухгалтерскомУчете` BOOLEAN, `ОтражатьВНалоговомУчете` BOOLEAN, `ОтражатьВУправленческомУчете` BOOLEAN, `Подразделение` CHAR, `Проект` CHAR, `Сделка` CHAR, `Склад` CHAR, `СуммаВключаетНДС` BOOLEAN, `СуммаДокумента` FLOAT, `СчетУчетаДоходовПоТареБУ` CHAR, `СчетУчетаДоходовПоТареНУ` CHAR, `СчетУчетаРасходовПоТареБУ` CHAR, `СчетУчетаРасходовПоТареНУ` CHAR, `СчетУчетаРасчетовПоАвансам` CHAR, `СтатьяПрочихДоходовРасходовПоТаре` CHAR, `СчетУчетаРасчетовПоТаре` CHAR, `СчетУчетаРасчетовСКонтрагентом` CHAR, `ТипЦен` CHAR, `УчитыватьНДС` BOOLEAN, `ОтпускРазрешил` CHAR, `ОтпускПроизвел` CHAR, `ДоверенностьНомер` CHAR, `ДоверенностьДата` Date, `ДоверенностьВыдана` CHAR, `ДоверенностьЧерезКого` CHAR, `ОтключитьКонтрольВзаиморасчетов` BOOLEAN, `УсловиеПродаж` CHAR, `ДополнениеКАдресуДоставки` CHAR, `ГлавныйБухгалтер` CHAR, `ЗаГлавногоБухгалтераПоПриказу` CHAR, `ЗаРуководителяПоПриказу` CHAR, `ts_Товары` JSON, `ts_ВозвратнаяТара` JSON, `ts_Услуги` JSON, `ts_СерийныеНомера` JSON, `ts_СоставНабора` JSON, `ts_ДокументыРасчетовСКонтрагентом` JSON, `ts_СерийныеНомераСоставНабора` JSON);
CREATE TABLE IF NOT EXISTS `doc_ПриходныйКассовыйОрдер` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `Организация` CHAR, `Касса` CHAR, `Подразделение` CHAR, `ВидОперации` CHAR, `Контрагент` CHAR, `ДоговорКонтрагента` CHAR, `ВалютаВзаиморасчетовПодотчетника` CHAR, `ВалютаДокумента` CHAR, `СуммаДокумента` FLOAT, `ПринятоОт` CHAR, `Основание` CHAR, `Приложение` CHAR, `Ответственный` CHAR, `ОтраженоВОперУчете` BOOLEAN, `Оплачено` BOOLEAN, `Комментарий` CHAR, `ОтражатьВУправленческомУчете` BOOLEAN, `ДокументОснование` CHAR, `ОтражатьВБухгалтерскомУчете` BOOLEAN, `РасчетныйДокумент` CHAR, `ОтражатьВНалоговомУчете` BOOLEAN, `СчетУчетаРасчетовСКонтрагентом` CHAR, `СубконтоКт1` CHAR, `СубконтоКт2` CHAR, `СубконтоКт3` CHAR, `СчетОрганизации` CHAR, `СтатьяДвиженияДенежныхСредств` CHAR, `СтавкаНДС` CHAR, `Содержание_УСН` CHAR, `Графа4_УСН` FLOAT, `Графа5_УСН` FLOAT, `Графа6_УСН` FLOAT, `Графа7_УСН` FLOAT, `ДоходыЕНВД_УСН` BOOLEAN, `РасходыЕНВД_УСН` BOOLEAN, `НДС_УСН` FLOAT, `РучнаяНастройка_УСН` BOOLEAN, `ВыручкаСНТТ` BOOLEAN, `НомерЧекаККМ` INT, `ВидПриемаРозничнойВыручки` CHAR, `ДенежныйЧек` CHAR, `ts_РасшифровкаПлатежа` JSON);
CREATE TABLE IF NOT EXISTS `doc_итРасчет` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `стрНомер` CHAR, `НомерSW` INT, `НомерВнутр` CHAR, `База` CHAR, `НомерОтдела` INT, `Проект` CHAR, `Организация` CHAR, `УчитыватьНДС` BOOLEAN, `Контрагент` CHAR, `ДоговорКонтрагента` CHAR, `Заказ` CHAR, `СтруктурнаяЕдиница` CHAR, `Комментарий` CHAR, `Менеджер` CHAR, `Подразделение` CHAR, `Себестоимость` FLOAT, `СебестоимостьУслуги` FLOAT, `СебестоимостьАксессуары` FLOAT, `КМарж` FLOAT, `СкидкаОбщая` FLOAT, `СкидкаНаПродукцию` FLOAT, `СкидкаНаУслуги` FLOAT, `СкидкаНаАксессуары` FLOAT, `СуммаДокумента` FLOAT, `ХарактеристикаАксессуаров` CHAR, `РабочийЦентр` CHAR, `ДисконтнаяКарта` CHAR, `ВалютаДокумента` CHAR, `СистемыПрофилей` CHAR, `СистемыФурнитуры` CHAR, `Сложный` BOOLEAN, `Телефон` CHAR, `Район` CHAR, `АдресДоставки` CHAR, `Координаты` CHAR, `address_fields` CHAR, `obj_delivery_state` CHAR, `ВремяИзменения` INT, `ИзмененЗдесь` BOOLEAN, `ts_Продукция` JSON, `ts_ВнутренниеЗаказы` JSON);
CREATE TABLE IF NOT EXISTS `doc_итЗаданиеНаПроизводство` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `Подразделение` CHAR, `Смена` CHAR, `Организация` CHAR, `База` CHAR, `Склад` CHAR, `СкладГП` CHAR, `Ответственный` CHAR, `Комментарий` CHAR, `СкладОптовый` CHAR, `КраткийСоставДокумента` CHAR, `УчитыватьДеловуюОбрезь` INT, `ЗапретитьПарныйРаскрой` BOOLEAN, `ДокументыСтр` CHAR, `ДатаВРаботеФакт` Date, `ДатаГотовоФакт` Date, `ДатаОМТС` Date, `ЕстьРаскрой` BOOLEAN, `ЕстьРаскрой2D` BOOLEAN, `ВидПодразделения` CHAR, `ts_ПланированиеНарядов` JSON, `ts_Потребность` JSON, `ts_ПотребностьПоМатериалам` JSON, `ts_Остатки` JSON, `ts_ОстаткиНовые` JSON, `ts_Раскрой` JSON, `ts_РаскройНестандарты` JSON, `ts_ВидыПодразделений` JSON, `ts_Номенклатуры` JSON, `ts_СвязанныеДокументы` JSON, `ts_Закрытие` JSON);
CREATE TABLE IF NOT EXISTS `doc_ЗаказПоставщику` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `ВалютаДокумента` CHAR, `ВидОперации` CHAR, `ВремяНапоминания` Date, `ДатаОплаты` Date, `ДатаПоступления` Date, `ДоговорКонтрагента` CHAR, `ИспользоватьПлановуюСебестоимость` BOOLEAN, `ИтогПлановаяСебестоимость` FLOAT, `Комментарий` CHAR, `Контрагент` CHAR, `КратностьВзаиморасчетов` INT, `КурсВзаиморасчетов` FLOAT, `НапомнитьОСобытии` BOOLEAN, `Организация` CHAR, `Ответственный` CHAR, `Подразделение` CHAR, `Склад` CHAR, `СтруктурнаяЕдиница` CHAR, `СуммаВключаетНДС` BOOLEAN, `СуммаДокумента` FLOAT, `ТипЦен` CHAR, `УчитыватьНДС` BOOLEAN, `КонтактноеЛицоКонтрагента` CHAR, `УсловиеПродаж` CHAR, `ДокументОснование` CHAR, `НомерПоДаннымПоставщика` CHAR, `ДатаПоДаннымПоставщика` Date, `ts_Товары` JSON, `ts_ВозвратнаяТара` JSON, `ts_Услуги` JSON, `ts_Оборудование` JSON, `ts_Материалы` JSON);
CREATE TABLE IF NOT EXISTS `doc_ЗаказПокупателя` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `АдресДоставки` CHAR, `ВалютаДокумента` CHAR, `ВидОперации` CHAR, `ВремяНапоминания` Date, `ДатаОплаты` Date, `ДатаОтгрузки` Date, `ДисконтнаяКарта` CHAR, `ДоговорКонтрагента` CHAR, `ИспользоватьПлановуюСебестоимость` BOOLEAN, `ИтогПлановаяСебестоимость` FLOAT, `Комментарий` CHAR, `Контрагент` CHAR, `КратностьВзаиморасчетов` INT, `КурсВзаиморасчетов` FLOAT, `НапомнитьОСобытии` BOOLEAN, `Организация` CHAR, `Ответственный` CHAR, `ОтражатьВБухгалтерскомУчете` BOOLEAN, `ОтражатьВНалоговомУчете` BOOLEAN, `Подразделение` CHAR, `СтруктурнаяЕдиница` CHAR, `СкладГруппа` CHAR, `СуммаВключаетНДС` BOOLEAN, `СуммаДокумента` FLOAT, `ТипЦен` CHAR, `УчитыватьНДС` BOOLEAN, `Грузополучатель` CHAR, `КонтактноеЛицоКонтрагента` CHAR, `УсловиеПродаж` CHAR, `ДополнениеКАдресуДоставки` CHAR, `ДокументОснование` CHAR, `Грузоотправитель` CHAR, `НомерВходящегоДокументаЭлектронногоОбмена` CHAR, `ДатаВходящегоДокументаЭлектронногоОбмена` Date, `НомерПоДаннымПокупателя` CHAR, `ДатаПоДаннымПокупателя` Date, `ts_Товары` JSON, `ts_ВозвратнаяТара` JSON, `ts_Услуги` JSON, `ts_Материалы` JSON, `ts_СоставНабора` JSON, `ts_ПараметрыВыпускаПродукции` JSON);
CREATE TABLE IF NOT EXISTS `ireg_$log` (`date` INT, `sequence` INT, `class` CHAR, `note` CHAR, `obj` CHAR, PRIMARY KEY (`date`, `sequence`));
CREATE TABLE IF NOT EXISTS `ireg_ЦеныНоменклатуры` (`ТипЦен` CHAR, `Номенклатура` CHAR, `ХарактеристикаНоменклатуры` CHAR, `Валюта` CHAR, `Цена` FLOAT, `ЕдиницаИзмерения` CHAR, `ПроцентСкидкиНаценки` FLOAT, `СпособРасчетаЦены` CHAR, PRIMARY KEY (`ТипЦен`, `Номенклатура`, `ХарактеристикаНоменклатуры`));
CREATE TABLE IF NOT EXISTS `cat_ЦеновыеГруппы` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `sequence` INT, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ХарактеристикиНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `База` CHAR, `Расчет` CHAR, `Изделие` INT, `Цвет` CHAR, `X` FLOAT, `Y` FLOAT, `Z` FLOAT, `S` FLOAT, `Комментарий` CHAR, `Масса` FLOAT, `Монтаж` BOOLEAN, `ПокупнойПФ` BOOLEAN, `Сложный` BOOLEAN, `Эскиз` CHAR, `ЭскизПропорция` FLOAT, `ЭскизWMF` CHAR, `ЭскизСПР` CHAR, `стрНомер` CHAR, `стрЭлементы` CHAR, `Себестоимость` FLOAT, `УсловныхОкон` FLOAT, `Конструкций` INT, `Створок` INT, `Импостов` INT, `Пакетов` INT, `Сэндвичей` INT, `Раскладок` INT, `Москиток` INT, `Соединителей` INT, `Подоконников` INT, `Водоотливов` INT, `Кривых` INT, `Цветных` INT, `Наклонных` INT, `КонструкцийАлюминий` INT, `КонструкцийНарезка` INT, `КонструкцийДвери` INT, `Фурнитура` CHAR, `РучноеУО` BOOLEAN, `ВедущаяПродукция` CHAR, `ВедущийЭлемент` INT, `ОКП` CHAR, `Активная` BOOLEAN, `owner` CHAR, `ts_Спецификация` JSON, `ts_Констр` JSON, `ts_Координаты` JSON, `ts_Соединения` JSON, `ts_Импосты` JSON, `ts_Заполнения` JSON, `ts_КоординатыЗаполнений` JSON, `ts_СпецификацияЗаполнений` JSON, `ts_Москитки` JSON, `ts_params` JSON, `ts_Визуализация` JSON);
CREATE TABLE IF NOT EXISTS `cat_ФизическиеЛица` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ДатаРождения` Date, `ИНН` CHAR, `КодИМНС` CHAR, `Комментарий` CHAR, `СтраховойНомерПФР` CHAR, `Пол` CHAR, `МестоРождения` CHAR, `ОсновноеИзображение` CHAR, `МестоРожденияКодПоОКАТО` CHAR, `ГруппаДоступаФизическогоЛица` CHAR, `ЛьготаПриНачисленииПособий` CHAR, `ИмеетНаучныеТруды` BOOLEAN, `ИмеетИзобретения` BOOLEAN, `ПостоянноПроживалВКрыму18Марта2014Года` BOOLEAN, `parent` CHAR, `ts_СоставСемьи` JSON, `ts_Образование` JSON, `ts_ТрудоваяДеятельность` JSON, `ts_ЗнаниеЯзыков` JSON, `ts_Профессии` JSON, `ts_Стажи` JSON, `ts_Награды` JSON, `ts_УченыеСтепени` JSON, `ts_УченыеЗвания` JSON);
CREATE TABLE IF NOT EXISTS `cat_УчетныеЗаписиЭлектроннойПочты` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `SMTPСервер` CHAR, `POP3Сервер` CHAR, `ПортSMTP` INT, `ПортPOP3` INT, `Логин` CHAR, `Пароль` CHAR, `ТребуетсяSMTPАутентификация` BOOLEAN, `ЛогинSMTP` CHAR, `ПарольSMTP` CHAR, `ВремяОжиданияСервера` INT, `ОставлятьКопииСообщенийНаСервере` BOOLEAN, `УдалятьПисьмаССервераЧерез` BOOLEAN, `КоличествоДнейУдаленияПисемССервера` INT, `АдресЭлектроннойПочты` CHAR, `ГруппаВходящие` CHAR, `ГруппаИсходящие` CHAR, `ГруппаУдаленные` CHAR, `ГруппаЧерновики` CHAR, `ГруппаНежелательные` CHAR, `ФорматТекстаПисьмаПоУмолчанию` CHAR, `ТекстПодписи` CHAR, `ДобавлятьПодписьКИсходящимПисьмам` BOOLEAN, `ДобавлятьПодписьКОтветамИПересылкам` BOOLEAN, `АвтоПолучениеОтправкаСообщений` BOOLEAN, `ИнтервалАвтоПолученияОтправкиСообщений` INT, `ОтветственныйЗаАвтоПолучениеОтправкуСообщений` CHAR, `ПомещатьОтветыИПереадресацииВТужеГруппу` BOOLEAN, `ДействиеАвтополученияОтправкиСообщений` CHAR, `АвтоматическаяУстановкаПометкиРассмотрено` BOOLEAN, `ИнтервалАвтоматическойУстановкиОтметкиРассмотрено` INT, `АвтоматическаяУстановкаПометкиРассмотреноПриОтвете` BOOLEAN, `АвтоматическаяУстановкаПометкиРассмотреноПриПолученииОтвета` BOOLEAN, `ИспользоватьКлассификациюПисемПоПредметам` BOOLEAN, `ЗаполнятьПустойПредметДляНовыхПисемИзТемыПисьма` BOOLEAN, `ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьПредмет` BOOLEAN, `ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьОснованиеНовогоПисьма` BOOLEAN, `ДляВходящихОтветовИПереадресацийИскатьПисьмаОснованияИЗаполнятьГруппуПисемНовогоПисьма` BOOLEAN, `АвтосохранениеПисем` BOOLEAN, `ИнтервалАвтосохраненияПисем` INT, `ФорматПисьмаДляОтветовИПереадресацийБратьИзИсходного` BOOLEAN, `КодировкаПисемПоУмолчанию` CHAR, `КодировкуПисьмаДляОтветовБратьИзИсходного` BOOLEAN, `ЗаполнятьОбъектыИзАдресовПервогоПисьма` BOOLEAN, `НазначениеУчетнойЗаписи` CHAR, `ИспользоватьДляОтправки` BOOLEAN, `ИспользоватьДляПолучения` BOOLEAN, `ИспользоватьЗащищенноеСоединениеДляВходящейПочты` BOOLEAN, `ИспользоватьЗащищенноеСоединениеДляИсходящейПочты` BOOLEAN, `ts_ДоступКУчетнойЗаписи` JSON);
CREATE TABLE IF NOT EXISTS `cat_СтатьиЗатрат` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВидЗатрат` CHAR, `СтатусМатериальныхЗатрат` CHAR, `ХарактерЗатрат` CHAR, `ВидРасходовНУ` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_СтатьиДвиженияДенежныхСредств` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВидДвиженияДенежныхСредств` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_Смены` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ts_ПериодыСмены` JSON);
CREATE TABLE IF NOT EXISTS `cat_Склады` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Комментарий` CHAR, `ТипЦенРозничнойТорговли` CHAR, `Подразделение` CHAR, `ВидСклада` CHAR, `НомерСекции` INT, `РасчетРозничныхЦенПоТорговойНаценке` BOOLEAN, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_СерииНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `СерийныйНомер` CHAR, `СрокГодности` Date, `НомерГТД` CHAR, `СтранаПроисхождения` CHAR, `ОсновноеИзображение` CHAR, `Комментарий` CHAR, `owner` CHAR);
CREATE TABLE IF NOT EXISTS `cat_РабочиеМеста` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ИмяКомпьютера` CHAR, `СетевойПорт` INT);
CREATE TABLE IF NOT EXISTS `cat_Проекты` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ДатаНачала` Date, `ДатаОкончания` Date, `Ответственный` CHAR, `Описание` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_Пользователи` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ПрофильПолномочийПользователя` CHAR, `ФизЛицо` CHAR, `ИдентификаторПользователяИБ` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_Подразделения` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВидПодразделения` CHAR, `ВидЦФО` CHAR, `ОсновнойПроект` CHAR, `sequence` INT, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_пзРейсы` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Автомобиль` CHAR, `Водитель` CHAR, `Организация` CHAR, `НачалоПогрузки` Date, `Выезд` Date, `Окончание` Date, `Подразделение` CHAR, `Состояние` CHAR, `ДатаСоздания` Date, `ts_Грузы` JSON, `ts_Заказы` JSON, `ts_Маршрут` JSON, `ts_ТочкиМаршрута` JSON);
CREATE TABLE IF NOT EXISTS `cat_пзОбъектыПланирования` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Расчет` CHAR, `СтрокаРасчета` INT, `Экземпляр` INT, `Конструкция` INT, `Элемент` INT, `ТипЭлемента` CHAR, `Подразделение` CHAR, `Шаг` INT, `Смена` CHAR, `Старт` Date, `Финиш` Date, `Запуск` Date, `Готовность` Date, `Комментарий` CHAR, `Продукция` CHAR, `Ячейка` CHAR, `ДатаПроведения` Date, `ts_Исполнители` JSON);
CREATE TABLE IF NOT EXISTS `cat_пзЗоныПогрузки` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ts_Подразделения` JSON);
CREATE TABLE IF NOT EXISTS `cat_Организации` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `prefix` CHAR, `ИНН` CHAR, `КПП` CHAR, `РегистрационныйНомерПФР` CHAR, `ГоловнаяОрганизация` CHAR, `НаименованиеПолное` CHAR, `КодПоОКПО` CHAR, `КодПоОКАТО` CHAR, `КодИМНС` CHAR, `РайонныйКоэффициент` FLOAT, `ЮрФизЛицо` CHAR, `ТерриториальныеУсловияПФР` CHAR, `ОсновнойБанковскийСчет` CHAR, `ВидСтавокЕСНиПФР` CHAR, `НаименованиеПлательщикаПриПеречисленииНалогов` CHAR, `ИностраннаяОрганизация` BOOLEAN, `ДатаРегистрации` Date, `КодОКОПФ` CHAR, `НаименованиеОКОПФ` CHAR, `КодОКФС` CHAR, `НаименованиеОКФС` CHAR, `СвидетельствоСерияНомер` CHAR, `СвидетельствоДатаВыдачи` Date, `СвидетельствоНаименованиеОргана` CHAR, `СвидетельствоКодОргана` CHAR, `СтранаРегистрации` CHAR, `СтранаПостоянногоМестонахождения` CHAR, `КодВСтранеРегистрации` CHAR, `ОГРН` CHAR, `НаименованиеИнострОрганизации` CHAR, `РегистрационныйНомерФСС` CHAR, `НаименованиеИМНС` CHAR, `КодОКВЭД` CHAR, `НаименованиеОКВЭД` CHAR, `КодОКОНХ` CHAR, `ИндивидуальныйПредприниматель` CHAR, `УдалитьОбменЗадействован` BOOLEAN, `ОбменКодАбонента` CHAR, `ОбменКаталогОтправкиДанныхОтчетности` CHAR, `ОбменКаталогПрограммыЭлектроннойПочты` CHAR, `РайонныйКоэффициентРФ` FLOAT, `ОтражатьВРегламентированномУчете` BOOLEAN, `КодИФНСПолучателя` CHAR, `НаименованиеТерриториальногоОрганаПФР` CHAR, `НаименованиеСокращенное` CHAR, `ВидОбменаСКонтролирующимиОрганами` CHAR, `УчетнаяЗаписьОбмена` CHAR, `КодОрганаПФР` CHAR, `КодОрганаФСГС` CHAR, `ДополнительныйКодФСС` CHAR, `КодПодчиненностиФСС` CHAR, `ЦифровойИндексОбособленногоПодразделения` INT, `РегистрационныйНомерТФОМС` CHAR, `ИПРегистрационныйНомерПФР` CHAR, `ИПРегистрационныйНомерФСС` CHAR, `ИПКодПодчиненностиФСС` CHAR, `ИПРегистрационныйНомерТФОМС` CHAR, `НаименованиеТерриториальногоОрганаФСС` CHAR, `КодПоОКТМО` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ОбщероссийскийКлассификаторПродукции` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `КонтрольноеЧисло` CHAR, `Комментарий` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_Номенклатура` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Артикул` CHAR, `НаименованиеПолное` CHAR, `Весовой` BOOLEAN, `ВесовойКоэффициентВхождения` INT, `ВестиОперативныйУчетОстатковНЗП` BOOLEAN, `ВестиПартионныйУчетПоСериям` BOOLEAN, `ВестиУчетПоСериям` BOOLEAN, `ВестиУчетПоСериямВНЗП` BOOLEAN, `ВестиУчетПоХарактеристикам` BOOLEAN, `ВидВоспроизводства` CHAR, `ВидНоменклатуры` CHAR, `ЕдиницаДляОтчетов` CHAR, `ЕдиницаХраненияОстатков` CHAR, `БазоваяЕдиницаИзмерения` CHAR, `Набор` BOOLEAN, `НазначениеИспользования` CHAR, `СтавкаНДС` CHAR, `Комментарий` CHAR, `НоменклатурнаяГруппаЗатрат` CHAR, `Услуга` BOOLEAN, `ОсновноеИзображение` CHAR, `ОсновнойПоставщик` CHAR, `ОтветственныйМенеджерЗаПокупки` CHAR, `НоменклатурнаяГруппа` CHAR, `СтранаПроисхождения` CHAR, `НомерГТД` CHAR, `ТребуетсяВнешняяСертификация` BOOLEAN, `ТребуетсяВнутренняяСертификация` BOOLEAN, `СтатьяЗатрат` CHAR, `ВестиСерийныеНомера` BOOLEAN, `Комплект` BOOLEAN, `ПорядокПрисвоенияСерийногоНомера` CHAR, `ЦеноваяГруппа` CHAR, `ОКП` CHAR, `ЕдиницаИзмеренияМест` CHAR, `ДополнительноеОписаниеНоменклатуры` CHAR, `Толщина` FLOAT, `Длина` FLOAT, `Угол` FLOAT, `ПарныйРаскрой` INT, `ШиринаПилы` FLOAT, `Склад` CHAR, `ВидПодразделения` CHAR, `ВРасчетеУчтено` BOOLEAN, `СортировкаВЛистеКомплектации` INT, `ПлощадьППМ` FLOAT, `КоэффСложности` FLOAT, `ТипЭлемента` CHAR, `ПлохойОбрезокМин` FLOAT, `ПлохойОбрезокМакс` FLOAT, `Ширина` FLOAT, `Плотность` FLOAT, `Производитель` CHAR, `Импортер` CHAR, `ДополнительноеОписаниеНоменклатурыВФорматеHTML` BOOLEAN, `parent` CHAR, `ts_ARTNO` JSON, `ts_SYSNO` JSON, `ts_ТипыРаспечатки` JSON);
CREATE TABLE IF NOT EXISTS `cat_Контрагенты` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR, `Комментарий` CHAR, `ДополнительноеОписание` CHAR, `ГоловнойКонтрагент` CHAR, `ИсточникИнформацииПриОбращении` CHAR, `КодПоОКПО` CHAR, `ИНН` CHAR, `КПП` CHAR, `ЮрФизЛицо` CHAR, `ОсновнойБанковскийСчет` CHAR, `ОсновнойДоговорКонтрагента` CHAR, `ОсновнойВидДеятельности` CHAR, `ДокументУдостоверяющийЛичность` CHAR, `ОсновнойМенеджерПокупателя` CHAR, `Покупатель` BOOLEAN, `Поставщик` BOOLEAN, `РасписаниеРаботыСтрокой` CHAR, `СрокВыполненияЗаказаПоставщиком` INT, `ОсновноеКонтактноеЛицо` CHAR, `НеЯвляетсяРезидентом` BOOLEAN, `ОКОПФ` CHAR, `Регион` CHAR, `ГруппаДоступаКонтрагента` CHAR, `ОбособленноеПодразделение` BOOLEAN, `parent` CHAR, `ts_ВидыДеятельности` JSON, `ts_МенеджерыПокупателя` JSON);
CREATE TABLE IF NOT EXISTS `cat_КлассификаторЕдиницИзмерения` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR, `МеждународноеСокращение` CHAR);
CREATE TABLE IF NOT EXISTS `cat_Кассы` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВалютаДенежныхСредств` CHAR, `ПодразделениеОрганизации` CHAR, `owner` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_property_values` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `owner` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ЕдиницыИзмерения` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ЕдиницаПоКлассификатору` CHAR, `Вес` FLOAT, `Объем` FLOAT, `Коэффициент` FLOAT, `ПорогОкругления` INT, `ПредупреждатьОНецелыхМестах` BOOLEAN, `owner` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ДоговорыКонтрагентов` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВалютаВзаиморасчетов` CHAR, `ВедениеВзаиморасчетов` CHAR, `Комментарий` CHAR, `ВидУсловийДоговора` CHAR, `ДержатьРезервБезОплатыОграниченноеВремя` BOOLEAN, `ДопустимаяСуммаЗадолженности` FLOAT, `ДопустимоеЧислоДнейЗадолженности` INT, `Организация` CHAR, `КонтролироватьСуммуЗадолженности` BOOLEAN, `КонтролироватьЧислоДнейЗадолженности` BOOLEAN, `ОбособленныйУчетТоваровПоЗаказамПокупателей` BOOLEAN, `ПроцентКомиссионногоВознаграждения` FLOAT, `СпособРасчетаКомиссионногоВознаграждения` CHAR, `ПроцентПредоплаты` FLOAT, `ТипЦен` CHAR, `ВидДоговора` CHAR, `ЧислоДнейРезерваБезОплаты` INT, `УчетАгентскогоНДС` BOOLEAN, `ВидАгентскогоДоговора` CHAR, `РасчетыВУсловныхЕдиницах` BOOLEAN, `КонтролироватьДенежныеСредстваКомитента` BOOLEAN, `РеализацияНаЭкспорт` BOOLEAN, `date` Date, `number_doc` CHAR, `ВидВзаиморасчетов` CHAR, `ВестиПоДокументамРасчетовСКонтрагентом` BOOLEAN, `ОсновнойПроект` CHAR, `ОсновнаяСтатьяДвиженияДенежныхСредств` CHAR, `СрокДействия` Date, `НаименованиеДляСчетаФактурыНаАванс` CHAR, `ПорядокРегистрацииСчетовФактурНаАвансПоДоговору` CHAR, `НалоговыйАгентПоОплате` BOOLEAN, `УстановленСрокОплатыДляРезервовПоСомнительнымДолгам` BOOLEAN, `СрокОплатыДляРезервовПоСомнительнымДолгам` INT, `owner` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ВидыНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ТипНоменклатуры` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ВидыКонтактнойИнформации` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `type` CHAR, `ВидОбъектаКонтактнойИнформации` CHAR, `РеквизитДопУпорядочивания` INT, `РедактированиеТолькоВДиалоге` BOOLEAN, `МожноИзменятьСпособРедактирования` BOOLEAN, `АдресТолькоРоссийский` BOOLEAN, `ВключатьСтрануВПредставление` BOOLEAN, `ОбязательноеЗаполнение` BOOLEAN, `ПроверятьКорректность` BOOLEAN, `ЗапрещатьВводНекорректного` BOOLEAN, `СкрыватьНеактуальныеАдреса` BOOLEAN, `tooltip` CHAR, `РазрешитьВводНесколькихЗначений` BOOLEAN, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_Валюты` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR, `ПараметрыПрописиНаРусском` CHAR);
